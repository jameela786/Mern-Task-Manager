{"ast":null,"code":"var _jsxFileName = \"/Users/budenshaik/Documents/jameela-task-tracker/task-tracker--frontend/src/components/SignUp/index.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\"; // Use useNavigate for React Router v6\n// import \"./index.css\";\n\n// const SignUp = () => {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const [message, setMessage] = useState(\"\");\n//   const [isRegistered, setIsRegistered] = useState(false); // State to track registration success\n//   const navigate = useNavigate(); // Use navigate for routing\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (formData.password.length < 5) {\n//       setMessage(\"Password must be at least 5 characters long.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:3001/signup\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(formData),\n//       });\n//       const data = await response.text();\n//       if (response.ok) {\n//         setIsRegistered(true);  // Set state to true on successful signup\n//         setMessage(\"User created successfully! Please log in.\");\n//         setTimeout(() => {\n//           navigate(\"/login\");  // Use navigate to redirect to login page\n//         }, 2000);\n//       } else {\n//         setMessage(data);\n//       }\n//     } catch (error) {\n//       setMessage(\"Error signing up. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2>Register</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>Name:</label>\n//         <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\n\n//         <label>Email:</label>\n//         <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n\n//         <label>Password:</label>\n//         <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n\n//         <button type=\"submit\">Register</button>\n//       </form>\n//       {message && <p className=\"message\">{message}</p>}\n//       {isRegistered && (\n//         <p className=\"redirect-message\">Redirecting to login...</p>  // Message before redirect\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SignUp;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'name is required';\n    }\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n    return newErrors;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newErrors = validateForm();\n    if (Object.keys(newErrors).length === 0) {\n      // Handle registration logic here\n      console.log('Form submitted:', formData);\n      // After successful registration, redirect to login\n      navigate('/login');\n    } else {\n      setErrors(newErrors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          className: errors.name ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          className: errors.email ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          className: errors.password ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          value: formData.confirmPassword,\n          onChange: handleChange,\n          className: errors.confirmPassword ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"SxSxDYGJnonMA0JlFmxKdvs0hY8=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignUp","_s","formData","setFormData","name","email","password","confirmPassword","errors","setErrors","navigate","handleChange","e","value","target","prevState","validateForm","newErrors","trim","test","length","handleSubmit","preventDefault","Object","keys","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["/Users/budenshaik/Documents/jameela-task-tracker/task-tracker--frontend/src/components/SignUp/index.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\"; // Use useNavigate for React Router v6\n// import \"./index.css\";\n\n// const SignUp = () => {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const [message, setMessage] = useState(\"\");\n//   const [isRegistered, setIsRegistered] = useState(false); // State to track registration success\n//   const navigate = useNavigate(); // Use navigate for routing\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (formData.password.length < 5) {\n//       setMessage(\"Password must be at least 5 characters long.\");\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(\"http://localhost:3001/signup\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(formData),\n//       });\n//       const data = await response.text();\n//       if (response.ok) {\n//         setIsRegistered(true);  // Set state to true on successful signup\n//         setMessage(\"User created successfully! Please log in.\");\n//         setTimeout(() => {\n//           navigate(\"/login\");  // Use navigate to redirect to login page\n//         }, 2000);\n//       } else {\n//         setMessage(data);\n//       }\n//     } catch (error) {\n//       setMessage(\"Error signing up. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <h2>Register</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>Name:</label>\n//         <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} required />\n\n//         <label>Email:</label>\n//         <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n\n//         <label>Password:</label>\n//         <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n\n//         <button type=\"submit\">Register</button>\n//       </form>\n//       {message && <p className=\"message\">{message}</p>}\n//       {isRegistered && (\n//         <p className=\"redirect-message\">Redirecting to login...</p>  // Message before redirect\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SignUp;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst SignUp = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'name is required';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newErrors = validateForm();\n\n    if (Object.keys(newErrors).length === 0) {\n      // Handle registration logic here\n      console.log('Form submitted:', formData);\n      // After successful registration, redirect to login\n      navigate('/login');\n    } else {\n      setErrors(newErrors);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <form onSubmit={handleSubmit} className=\"auth-form\">\n        <h2>Register</h2>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"name\">name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            className={errors.name ? 'error' : ''}\n          />\n          {errors.name && <span className=\"error-message\">{errors.name}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            className={errors.email ? 'error' : ''}\n          />\n          {errors.email && <span className=\"error-message\">{errors.email}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            className={errors.password ? 'error' : ''}\n          />\n          {errors.password && <span className=\"error-message\">{errors.password}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            name=\"confirmPassword\"\n            value={formData.confirmPassword}\n            onChange={handleChange}\n            className={errors.confirmPassword ? 'error' : ''}\n          />\n          {errors.confirmPassword && <span className=\"error-message\">{errors.confirmPassword}</span>}\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAER,IAAI;MAAES;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCX,WAAW,CAACY,SAAS,KAAK;MACxB,GAAGA,SAAS;MACZ,CAACX,IAAI,GAAGS;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAG,CAAC,CAAC;IAEpB,IAAI,CAACf,QAAQ,CAACE,IAAI,CAACc,IAAI,CAAC,CAAC,EAAE;MACzBD,SAAS,CAACb,IAAI,GAAG,kBAAkB;IACrC;IAEA,IAAI,CAACF,QAAQ,CAACG,KAAK,CAACa,IAAI,CAAC,CAAC,EAAE;MAC1BD,SAAS,CAACZ,KAAK,GAAG,mBAAmB;IACvC,CAAC,MAAM,IAAI,CAAC,cAAc,CAACc,IAAI,CAACjB,QAAQ,CAACG,KAAK,CAAC,EAAE;MAC/CY,SAAS,CAACZ,KAAK,GAAG,kBAAkB;IACtC;IAEA,IAAI,CAACH,QAAQ,CAACI,QAAQ,EAAE;MACtBW,SAAS,CAACX,QAAQ,GAAG,sBAAsB;IAC7C,CAAC,MAAM,IAAIJ,QAAQ,CAACI,QAAQ,CAACc,MAAM,GAAG,CAAC,EAAE;MACvCH,SAAS,CAACX,QAAQ,GAAG,wCAAwC;IAC/D;IAEA,IAAIJ,QAAQ,CAACI,QAAQ,KAAKJ,QAAQ,CAACK,eAAe,EAAE;MAClDU,SAAS,CAACV,eAAe,GAAG,wBAAwB;IACtD;IAEA,OAAOU,SAAS;EAClB,CAAC;EAED,MAAMI,YAAY,GAAIT,CAAC,IAAK;IAC1BA,CAAC,CAACU,cAAc,CAAC,CAAC;IAClB,MAAML,SAAS,GAAGD,YAAY,CAAC,CAAC;IAEhC,IAAIO,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;MACvC;MACAK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAExB,QAAQ,CAAC;MACxC;MACAQ,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLD,SAAS,CAACQ,SAAS,CAAC;IACtB;EACF,CAAC;EAED,oBACElB,OAAA;IAAK4B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7B7B,OAAA;MAAM8B,QAAQ,EAAER,YAAa;MAACM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACjD7B,OAAA;QAAA6B,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEjBlC,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7B,OAAA;UAAOmC,OAAO,EAAC,MAAM;UAAAN,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClClC,OAAA;UACEoC,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,MAAM;UACThC,IAAI,EAAC,MAAM;UACXS,KAAK,EAAEX,QAAQ,CAACE,IAAK;UACrBiC,QAAQ,EAAE1B,YAAa;UACvBgB,SAAS,EAAEnB,MAAM,CAACJ,IAAI,GAAG,OAAO,GAAG;QAAG;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,EACDzB,MAAM,CAACJ,IAAI,iBAAIL,OAAA;UAAM4B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEpB,MAAM,CAACJ;QAAI;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC,eAENlC,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7B,OAAA;UAAOmC,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpClC,OAAA;UACEoC,IAAI,EAAC,OAAO;UACZC,EAAE,EAAC,OAAO;UACVhC,IAAI,EAAC,OAAO;UACZS,KAAK,EAAEX,QAAQ,CAACG,KAAM;UACtBgC,QAAQ,EAAE1B,YAAa;UACvBgB,SAAS,EAAEnB,MAAM,CAACH,KAAK,GAAG,OAAO,GAAG;QAAG;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,EACDzB,MAAM,CAACH,KAAK,iBAAIN,OAAA;UAAM4B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEpB,MAAM,CAACH;QAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eAENlC,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7B,OAAA;UAAOmC,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1ClC,OAAA;UACEoC,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,UAAU;UACbhC,IAAI,EAAC,UAAU;UACfS,KAAK,EAAEX,QAAQ,CAACI,QAAS;UACzB+B,QAAQ,EAAE1B,YAAa;UACvBgB,SAAS,EAAEnB,MAAM,CAACF,QAAQ,GAAG,OAAO,GAAG;QAAG;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,EACDzB,MAAM,CAACF,QAAQ,iBAAIP,OAAA;UAAM4B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEpB,MAAM,CAACF;QAAQ;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eAENlC,OAAA;QAAK4B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB7B,OAAA;UAAOmC,OAAO,EAAC,iBAAiB;UAAAN,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzDlC,OAAA;UACEoC,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,iBAAiB;UACpBhC,IAAI,EAAC,iBAAiB;UACtBS,KAAK,EAAEX,QAAQ,CAACK,eAAgB;UAChC8B,QAAQ,EAAE1B,YAAa;UACvBgB,SAAS,EAAEnB,MAAM,CAACD,eAAe,GAAG,OAAO,GAAG;QAAG;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,EACDzB,MAAM,CAACD,eAAe,iBAAIR,OAAA;UAAM4B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEpB,MAAM,CAACD;QAAe;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF,CAAC,eAENlC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChC,EAAA,CAvHID,MAAM;EAAA,QAQOH,WAAW;AAAA;AAAAyC,EAAA,GARxBtC,MAAM;AAyHZ,eAAeA,MAAM;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}