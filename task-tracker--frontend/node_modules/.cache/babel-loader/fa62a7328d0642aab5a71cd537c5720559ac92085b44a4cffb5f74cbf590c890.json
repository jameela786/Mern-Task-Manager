{"ast":null,"code":"var _jsxFileName = \"/Users/budenshaik/Documents/jameela-task-tracker/task-tracker--frontend/src/components/SignUp/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiError, setApiError] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    return newErrors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = validateForm();\n    if (Object.keys(newErrors).length === 0) {\n      setIsLoading(true);\n      setApiError('');\n      try {\n        const response = await fetch('http://localhost:3001/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          // Include cookies in the request\n          body: JSON.stringify({\n            name: formData.name,\n            email: formData.email,\n            password: formData.password\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          // Handle specific error messages from the server\n          throw new Error(data.message || 'Registration failed');\n        }\n        console.log('Registration successful:', data);\n        navigate('/login');\n      } catch (error) {\n        console.error('Registration error:', error);\n        setApiError(error.message || 'Registration failed. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      setErrors(newErrors);\n    }\n  };\n\n  // Rest of your component remains the same\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"sopIxPuW8kyKK+XZUxpxkYCsWzo=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","email","password","errors","setErrors","isLoading","setIsLoading","apiError","setApiError","navigate","handleChange","e","value","target","prevState","prev","validateForm","newErrors","trim","test","length","handleSubmit","preventDefault","Object","keys","response","fetch","method","headers","credentials","body","JSON","stringify","data","json","ok","Error","message","console","log","error","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/budenshaik/Documents/jameela-task-tracker/task-tracker--frontend/src/components/SignUp/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Register.css';\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [apiError, setApiError] = useState('');\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = 'Email is invalid';\n    }\n\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n\n    return newErrors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const newErrors = validateForm();\n\n    if (Object.keys(newErrors).length === 0) {\n      setIsLoading(true);\n      setApiError('');\n      \n      try {\n        const response = await fetch('http://localhost:3001/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include', // Include cookies in the request\n          body: JSON.stringify({\n            name: formData.name,\n            email: formData.email,\n            password: formData.password\n          })\n        });\n\n        const data = await response.json();\n\n        if (!response.ok) {\n          // Handle specific error messages from the server\n          throw new Error(data.message || 'Registration failed');\n        }\n\n        console.log('Registration successful:', data);\n        navigate('/login');\n      } catch (error) {\n        console.error('Registration error:', error);\n        setApiError(error.message || 'Registration failed. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      setErrors(newErrors);\n    }\n  };\n\n  // Rest of your component remains the same\n  return (\n    <div className=\"register-container\">\n      {/* Your existing JSX */}\n    </div>\n  );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}